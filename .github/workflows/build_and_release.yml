name: Go Build and Release

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [windows, macos]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - name: Configure environment
        run: |
          if [ "${{ matrix.os }}" == "windows" ]; then
            export GOOS=windows
          elif [ "${{ matrix.os }}" == "macos" ]; then
            export GOOS=darwin
          fi
          export GOARCH=${{ matrix.arch }}
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV

      - name: Build binary
        run: |
          mkdir -p build
          go build -o build/Yasso

      - name: Compress artifact
        run: |
          zip -j Yasso_${{ matrix.os }}_${{ matrix.arch }}.zip build/Yasso
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: Yasso_${{ matrix.os }}_${{ matrix.arch }}
          path: Yasso_${{ matrix.os }}_${{ matrix.arch }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.run_id }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Asset Path
        run: |
          ASSET_PATH=$(find ./artifacts -name "Yasso_*.zip" -print -quit)
          echo "ASSET_PATH=$ASSET_PATH" >> $GITHUB_ENV
        shell: bash

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ASSET_PATH }}
          asset_name: $(basename ${{ env.ASSET_PATH }})
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
